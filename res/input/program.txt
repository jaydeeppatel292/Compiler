class a:b,c  {
	int id; float id; int id ();
};

int id :: id (int id [234][234], int id)
{
	id[234][234].id().id[234].id().id = 2341 * 2342 + 2343 and 2344 == 2345 / 2346;
	id[234][234].id().id[234].id().id[234] = 234 * 234 + 234 and 234 == 234 / 234;
	id = 234 * 234 + 234 and 234 == 234 / 234;

	if (234 * 234 + 234 and 234 == 234 / 234)
		then
		{ return (234 * 234 + 234 and 234 == 234 / 234);
		}
	else
		{
			return (234 * 234 + 234 and 234 == 234 / 234);
		};
	get (id[234]);
	put (234 + 234 * 234 and 234 == 234 / 234);
	return (234 + 234 * 234 and 234 == 234 / 234);
};

float id(){
 float id;
 id id;
 id = 234  * ( 234 + 23.43 / 43.34 );
};

id id(){

};


program {
	int id [234];
	int id;;;;;;;;;;;;;
	int id;
	int id;
	id id;
	id id[234][234][234][234];

	for(int i=0; i<100;i=i+1){
	    get(sample[i]);
	    sample[i] = (sample[i] * randomize());
	};
    if (234 * 234 + 234 and 234 == 234 / 234)
    		then
    		{ return (234 * 234 + 234 and 234 == 234 / 234);
    		}
    	else
    		{
    			return (234 * 234 + 234 and 234 == 234 / 234);
    		};
	maxValue = utility.findMax(sample);
	minValue = utility.findMin(sample);
	arrayUtility[utility.var1[1][2][3][4][5][id+maxvalue]][1][1][1].var2 =2.5;
    put(maxValue);
    put(minValue);
};