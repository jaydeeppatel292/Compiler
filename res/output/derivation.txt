prog 
cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
classDecl SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class id SEMANTIC_MAKE_NODE_CLASS_ID oid SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class id SEMANTIC_MAKE_NODE_CLASS_ID oid SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility SEMANTIC_MAKE_NODE_CLASS_ID oid SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { type id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; funcDef SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; funcHead funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; type id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; statementPrime ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( expr ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( expr ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( expr ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a relOp arithExpr SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt arithExpr SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt arithExpr SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a multOp factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorTemp SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial factorPrime SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( expr aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a addOp term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - factor termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; id VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; assignStat ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( expr aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( a SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( a SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( a SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( a ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( a ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( a ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( a ) ; } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( a ) ; } ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int var1 ; } ; int factorial ( int a ) { int b ; if ( a gt 1 ) then { return ( a * factorial ( a - 1 ) ) ; } else { return ( 1 ) ; } ; } ; program { int max ; int a ; a = 5 ; a = factorial ( a ) ; put ( a ) ; } ; 
