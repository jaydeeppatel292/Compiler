prog 
cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
classDecl SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class id SEMANTIC_MAKE_NODE_CLASS_ID oid SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class id SEMANTIC_MAKE_NODE_CLASS_ID oid SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility SEMANTIC_MAKE_NODE_CLASS_ID oid SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { type id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; type id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; funcDef SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; funcHead funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; type id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { statementPrime ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( expr ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( expr ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( expr ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n relOp arithExpr SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq arithExpr SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq arithExpr SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n multOp factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorTemp SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial factorPrime SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( expr aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n addOp term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - factor termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; statementPrime ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( id variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n SEMANTIC_MAKE_FAMILY_VAR ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; assignStat ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( expr aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( ans factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( ans indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( ans SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( ans SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( ans SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( ans SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( ans SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( ans ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( ans ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( ans ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( ans ) ; } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( ans ) ; } ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { int n ; int ans ; get ( n ) ; ans = factorial ( n ) ; put ( ans ) ; } ; 
Success 
