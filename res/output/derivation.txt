prog 
cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
classDecl SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class id SEMANTIC_MAKE_NODE_CLASS_ID oid SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class id SEMANTIC_MAKE_NODE_CLASS_ID oid SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility SEMANTIC_MAKE_NODE_CLASS_ID oid SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { type id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; type id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; type id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( fParams ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( fParams ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x fParamsTail SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; funcDecl SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; type id ( fParams ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int id ( fParams ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int id ( fParams ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( fParams ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( fParams ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x fParamsTail SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; SEMANTIC_MAKE_FAMILY_FUNC_DECL SEMANTIC_MAKE_SIBLING_COMMON funcDeclRep SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; funcDef SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; funcHead funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; type id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr SEMANTIC_MAKE_FAMILY_SR_ID id ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr SEMANTIC_MAKE_FAMILY_SR_ID id ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x fParamsTail SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { statementPrime ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( expr aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x aParamsTail SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , expr SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , expr SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; funcDef SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; funcHead funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; type id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr SEMANTIC_MAKE_FAMILY_SR_ID id ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr SEMANTIC_MAKE_FAMILY_SR_ID id ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x fParamsTail SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; id VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x addOp term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + factor termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; funcDef SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; funcHead funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; type id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { statementPrime ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( expr ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( expr ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( expr ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n relOp arithExpr SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq arithExpr SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq arithExpr SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n multOp factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorTemp SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial factorPrime SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( expr aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n addOp term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - factor termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; funcDef SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; funcHead funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; type id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; id id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a fParamsTail SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { id VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; id VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a multOp factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * factorTemp SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b factorPrime SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; assignStat ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a addOp term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + factor termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { id VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; id VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( expr aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 aParamsTail SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , expr SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , expr SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; assignStat ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( expr aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a aParamsTail SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , expr SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , expr SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_SIBLING_COMMON aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( id variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n SEMANTIC_MAKE_FAMILY_VAR ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( expr aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n ) SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n ) SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n ) SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n ) SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n ) ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n ) ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n ) ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n ) ) ; } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n ) ) ; } ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int sum ( int x , int y ) ; int doSum ( int x , int y ) ; } ; int Utility sr doSum ( int x , int y ) { return ( sum ( x , y ) ) ; } ; int Utility sr sum ( int x , int y ) { int ans ; ans = x + y ; return ( ans ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a * b ; utility . b = a + b ; return ( utility ) ; } ; program { Utility utility ; int n ; utility = getClass ( 10 , 15 ) ; put ( utility . a ) ; put ( utility . b ) ; n = utility . doSum ( utility . a , utility . b ) ; put ( n ) ; get ( n ) ; put ( factorial ( n ) ) ; } ; 
Success 
