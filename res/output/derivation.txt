prog 
cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
classDecl SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class id SEMANTIC_MAKE_NODE_CLASS_ID oid SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class id SEMANTIC_MAKE_NODE_CLASS_ID oid SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility SEMANTIC_MAKE_NODE_CLASS_ID oid SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility SEMANTIC_MAKE_FAMILY_INHER_LIST { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { type id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; type id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; type id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int id varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c varFunTail SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL varfundecl SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; SEMANTIC_MAKE_FAMILY_VAR_FUNC_DECL } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; SEMANTIC_MAKE_FAMILY_CLASS_DECL SEMANTIC_MAKE_SIBLING_COMMON cd SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; SEMANTIC_MAKE_FAMILY_CLASSLIST fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; funcDef SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; funcHead funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; type id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; id id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a fParamsTail SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM SEMANTIC_MAKE_SIBLING_COMMON fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { id VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; id VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a addOp term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + factor termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; assignStat ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a addOp term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + factor termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b addOp term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + factor termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; assignStat ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 multOp factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * factorTemp SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; funcDef SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; funcHead funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; type id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; id id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a arraySize SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ integer ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ integer ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] arraySize SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ integer ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ integer ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { id VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; id VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = expr ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] addOp term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + factor termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_EXPR ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; SEMANTIC_MAKE_FAMILY_ASSIGN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; assignStat ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] addOp term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + factor termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; assignStat ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] addOp term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + factor termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; funcDef SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; funcHead funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; type id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int id idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial idsrid ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( fParams ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( type id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ar SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n SEMANTIC_MAKE_FAMILY_DIM_LIST SEMANTIC_MAKE_FAMILY_FPARAM fpTail SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n SEMANTIC_MAKE_FAMILY_FPARAM_LIST ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) funcBody ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { statementPrime ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( expr ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( expr ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( expr ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n relOp arithExpr SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq arithExpr SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq arithExpr SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL SEMANTIC_MAKE_FAMILY_REL_EXPR SEMANTIC_MAKE_FAMILY_EXPR ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then statBlock else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else statBlock ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( expr ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n multOp factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factor SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorTemp SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial factorPrime SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( expr aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n addOp term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - term SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - factor termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 SEMANTIC_MAKE_FAMILY_TERM SEMANTIC_MAKE_FAMILY_ARITH_EXPR arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR SEMANTIC_MAKE_FAMILY_MULT_OP termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; SEMANTIC_MAKE_FAMILY_RETURN_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } SEMANTIC_MAKE_FAMILY_STATEMENT_BLOCK ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; SEMANTIC_MAKE_FAMILY_IF_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; SEMANTIC_MAKE_FAMILY_FUNC_DEF SEMANTIC_MAKE_SIBLING_COMMON fd SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; SEMANTIC_MAKE_FAMILY_FUNCTION_LIST program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program funcBody ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { id VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility VDSTPrime } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a arraySize SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ integer ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ integer ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] arraySize SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ integer ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ integer ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] SEMANTIC_MAKE_SIBLING_AR ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int id ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ar SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 SEMANTIC_MAKE_FAMILY_DIM_LIST ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; SEMANTIC_MAKE_FAMILY_VAR_DECL SEMANTIC_MAKE_SIBLING_VAR_DECL VDST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; statementPrime ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( id variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] SEMANTIC_MAKE_FAMILY_VAR ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( id variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_VAR ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( id variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] SEMANTIC_MAKE_FAMILY_VAR ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( id variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] SEMANTIC_MAKE_FAMILY_VAR ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( id variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] SEMANTIC_MAKE_FAMILY_VAR ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; assignStat ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; variable SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; id variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility variableTail SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_ASSIGN_LEFT_VAR assignOp expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = expr SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( expr aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) SEMANTIC_MAKE_FAMILY_EXPR SEMANTIC_MAKE_FAMILY_ASSIGN_STAT ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( variable ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( id variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a variableTail ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT variablePrime ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_VAR ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; SEMANTIC_MAKE_FAMILY_GET_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; statement SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( expr ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( aParams ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( expr aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( arithExpr exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( factorTemp SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( id factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a factorPrime SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] indice SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ arithExpr ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ term arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ factor termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ integer SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 SEMANTIC_MAKE_FAMILY_FACTOR_NUM termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDICE SEMANTIC_MAKE_SIBLING_COMMON indiceRep SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_INDEX_LIST SEMANTIC_MAKE_FAMILY_DATA_MEMBER SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_EXPR aParamsTailRep SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] SEMANTIC_MAKE_FAMILY_A_PARAMS ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] ) SEMANTIC_MAKE_FAMILY_F_CALL SEMANTIC_MAKE_FAMILY_VAR_ELEMENT factorTempA SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] ) SEMANTIC_MAKE_FAMILY_VAR SEMANTIC_MAKE_FAMILY_FACTOR termTail SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] ) SEMANTIC_MAKE_FAMILY_TERM arithExprTAIL SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] ) SEMANTIC_MAKE_FAMILY_ARITH_EXPR_FINAL exprTail SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] ) SEMANTIC_MAKE_FAMILY_EXPR ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] ) ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] ) ) ; SEMANTIC_MAKE_FAMILY_PUT_STAT SEMANTIC_MAKE_FAMILY_STATEMENT SEMANTIC_MAKE_SIBLING_COMMON ST } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] ) ) ; SEMANTIC_MAKE_FAMILY_ST_BLOCK } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] ) ) ; } SEMANTIC_MAKE_FAMILY_STAT_BODY ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] ) ) ; } ; SEMANTIC_MAKE_FAMILY_PROG 
class Utility { int a ; int b ; int c ; } ; Utility getClass ( int a , int b ) { Utility utility ; utility . a = a + b ; utility . b = a + b + a ; utility . c = 2 * a ; return ( utility ) ; } ; Utility getSum ( int a [ 5 ] [ 6 ] ) { Utility utility ; utility . a = a [ 1 ] [ 3 ] + a [ 2 ] [ 3 ] ; utility . b = a [ 1 ] [ 4 ] + a [ 2 ] [ 4 ] ; utility . c = a [ 2 ] [ 3 ] + a [ 3 ] [ 3 ] ; return ( utility ) ; } ; int factorial ( int n ) { if ( n eq 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } ; program { Utility utility ; int a [ 5 ] [ 6 ] ; int a1 ; int b1 ; get ( a [ 1 ] [ 3 ] ) ; get ( a [ 2 ] [ 3 ] ) ; get ( a [ 1 ] [ 4 ] ) ; get ( a [ 2 ] [ 4 ] ) ; get ( a [ 3 ] [ 3 ] ) ; utility = getSum ( a ) ; put ( utility . a ) ; put ( utility . b ) ; put ( utility . c ) ; get ( a [ 2 ] [ 3 ] ) ; put ( factorial ( a [ 2 ] [ 3 ] ) ) ; } ; 
